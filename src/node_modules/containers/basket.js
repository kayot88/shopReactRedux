import React from 'react'
import * as R from 'ramda'
import {connect} from 'react-redux'
import {Link} from 'react-router-dom'
import {getPhonesByIdWithCount, totalSumInBasket} from 'selectors'
import {removePhoneFromBasket, clearBasket} from 'actions'

const Basket = ({phones, totalPrice, removePhoneFromBasket, clearBasket}) => {
  const isBasketEmpty = R.isEmpty(phones)
  const renderSidebar = () => (
    <div>
      <Link to="/" className="btn btn-info">
        <span className="glyphicon glyphicon-info-sign" />
        <span>Continue shopping!</span>
      </Link>
      {!isBasketEmpty && (
        <div>
          <button className="btn btn-danger" onClick={clearBasket}>
            <span className="glyphicon glyphicon-trash" />
            Clean Cart
          </button>
          <button
            className="btn btn-success"
            onClick={() => alert(JSON.stringify(phones))}
          >
            <span className="glyphicon glyphicon-envelope" />
            Checkout
          </button>
        </div>
      )}
    </div>
  )
  const renderContent = () => (
    <div>
      {isBasketEmpty && (
        <div>Your shopping cart is empty. You piece off ðŸ’©</div>
      )}
      <div className="table-responsive">
        <table className="table-bordered cf">
          <tbody>
            {phones.map((phone, i) => (
              <tr key={i} className="item-checkout">
                <td className="first-column-checkout">
                  <img
                    src={phone.image}
                    alt={phone.name}
                    className="img-thumbnail basket-img"
                  />
                </td>
                <td>{phone.name}</td>
                <td>${phone.price}</td>
                <td>{phone.count}</td>
                <td>
                  <span
                    className="delete-cart"
                    onClick={() => removePhoneFromBasket(phone.id)}
                  ></span>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      {R.not(isBasketEmpty) && (
        <div className="row">
          <div className="pull-right total-user-checkout">
            <b>Total:</b>${totalPrice}
          </div>
        </div>
      )}
    </div>
  )
  return (
    <div className="view-container">
      <div className="container">
        <div className="row">
          <div className="col-md-9">{renderContent()}</div>
          <div className="col-md-3 btn-user-checkout">{renderSidebar()}</div>
        </div>
      </div>
    </div>
  )
}
const mapStateToProps = state => {
  return {
    phones: getPhonesByIdWithCount(state),
    totalPrice: totalSumInBasket(state)
  }
}

const mapDispatchToProps = {
  removePhoneFromBasket,
  clearBasket
}
export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Basket)
